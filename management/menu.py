from management.culture_manager import CultureManager
from calculation.area_calculator import AreaCalculator
from management.insum_manager import Insumo

class Menu:
    """
    Classe respons√°vel por exibir e gerenciar o menu principal.
    """
    def __init__(self):
        self.culture_manager = CultureManager()
        self.insumo = Insumo()
        self.insumos = {}  # Dicion√°rio para armazenar insumos cadastrados por cultura

    def display(self):
        """Exibe o menu principal e gerencia as op√ß√µes do usu√°rio."""
        while True:
            print("\nüìå MENU PRINCIPAL")
            print("1Ô∏è‚É£ Escolher culturas para trabalhar")
            print("2Ô∏è‚É£ Cadastrar novas culturas")
            print("3Ô∏è‚É£ Ver culturas cadastradas")
            print("4Ô∏è‚É£ Calcular √°rea de plantio")
            print("5Ô∏è‚É£ Cadastrar insumos para culturas")
            print("6Ô∏è‚É£ Ver insumos cadastrados")
            print("0Ô∏è‚É£ Sair")

            opcao = input("Escolha uma op√ß√£o: ").strip()

            if opcao == "1":
                self.culture_manager.select_culture()
            elif opcao == "2":
                self.culture_manager.register_culture()
            elif opcao == "3":
                self.culture_manager.registered_cultures()
            elif opcao == "4":
                self.calculate_area()
            elif opcao == "5":
                self.register_inputs()
            elif opcao == "6":
                self.show_inputs()
            elif opcao == "0":
                print("üëã Saindo do programa. At√© mais!")
                break
            else:
                print("‚ùå Op√ß√£o inv√°lida. Tente novamente.")

    def calculate_area(self):
        """Calcula a √°rea de plantio em hectares para cada cultura escolhida."""
        if not self.culture_manager.culturas_escolhidas:
            print("‚ö†Ô∏è Voc√™ precisa escolher as culturas primeiro.")
            return

        for cultura in self.culture_manager.culturas_escolhidas:
            print(f"\nCalculando √°rea para a cultura: {cultura.capitalize()}")

            print("Escolha a forma da √°rea de plantio:")
            print("1Ô∏è‚É£ Quadrado")
            print("2Ô∏è‚É£ Ret√¢ngulo")
            print("3Ô∏è‚É£ C√≠rculo")
            print("4Ô∏è‚É£ Tri√¢ngulo")
            print("5Ô∏è‚É£ Pol√≠gono Regular")
            print("6Ô∏è‚É£ Trap√©zio")

            opcao = input("Digite o n√∫mero da op√ß√£o: ").strip()

            if opcao == "1":
                lado = float(input("Digite o lado do quadrado (km): "))
                area = AreaCalculator.calcular_quadrado(lado)
            elif opcao == "2":
                base = float(input("Digite a base do ret√¢ngulo (km): "))
                altura = float(input("Digite a altura do ret√¢ngulo (km): "))
                area = AreaCalculator.calcular_retangulo(base, altura)
            elif opcao == "3":
                raio = float(input("Digite o raio do c√≠rculo (km): "))
                area = AreaCalculator.calcular_circulo(raio)
            elif opcao == "4":
                base = float(input("Digite a base do tri√¢ngulo (km): "))
                altura = float(input("Digite a altura do tri√¢ngulo (km): "))
                area = AreaCalculator.calcular_triangulo(base, altura)
            elif opcao == "5":
                n_lados = int(input("Digite o n√∫mero de lados do pol√≠gono regular: "))
                comprimento_lado = float(input("Digite o comprimento de cada lado (km): "))
                area = AreaCalculator.calcular_poligono_regular(n_lados, comprimento_lado)
            elif opcao == "6":
                base1 = float(input("Digite a base maior do trap√©zio (km): "))
                base2 = float(input("Digite a base menor do trap√©zio (km): "))
                altura = float(input("Digite a altura do trap√©zio (km): "))
                area = AreaCalculator.calcular_trapezio(base1, base2, altura)
            else:
                print("‚ùå Op√ß√£o inv√°lida. Tente novamente.")
                return

            print(f"üå± A √°rea de plantio para {cultura.capitalize()} √© de {area:.2f} hectares.")

    def register_inputs(self):
        """Cadastra insumos para as culturas escolhidas."""
        if not self.culture_manager.culturas_escolhidas:
            print("‚ö†Ô∏è Voc√™ precisa escolher as culturas primeiro.")
            return

        for cultura in self.culture_manager.culturas_escolhidas:
            print(f"\nCadastrando insumos para a cultura: {cultura.capitalize()}")
            self.insumo.cadastrar_insumos()
            self.insumos[cultura] = self.insumo  # Armazena o objeto Insumo por cultura

    def show_inputs(self):
        """Exibe os insumos cadastrados para cada cultura."""
        if not self.insumos:
            print("‚ö†Ô∏è Nenhum insumo foi cadastrado ainda.")
            return

        for cultura, insumo in self.insumos.items():
            print(f"\nüìã Insumos cadastrados para a cultura {cultura.capitalize()}:")
            print(f"\n Os insumos s√£o {self.insumo.obter_insumos()}")
            
