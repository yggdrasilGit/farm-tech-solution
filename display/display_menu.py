from management.culture_manager import CultureManager
from management.insum_manager import Insumo
from calculation.insum_calculator import InsumoCalculator
from display.display_area import DisplayAreaCalculator
from api_input_data.load_data_statis import RScriptLoader

class DisplayMenu:
    """
    Classe respons√°vel mandar as informacoes para o menu principal.
    """
    def __init__(self):
        self.culture_manager = CultureManager()
        self.display_area_calculador = DisplayAreaCalculator(cultura=self.culture_manager.cultura_escolhida)
        self.insumos = {}  # Dicion√°rio para armazenar insumos cadastrados por cultura
        self.insumo = Insumo() # instancia insumo para cadastrar 
        self.estatistica = RScriptLoader
        self.area_plantio = self.display_area_calculador
    
    def display(self):
        """Exibe o menu principal e gerencia as op√ß√µes do usu√°rio."""
        while True:
            print("\nüìå MENU PRINCIPAL")
            print("1Ô∏è‚É£ Escolher culturas para trabalhar")
            print("2Ô∏è‚É£ Cadastrar novas culturas")
            print("3Ô∏è‚É£ Ver culturas cadastradas")
            print("4Ô∏è‚É£ Calcular √°rea de plantio")
            print("5Ô∏è‚É£ Cadastrar insumos para culturas")
            print("6Ô∏è‚É£ Ver insumos cadastrados")
            print("7Ô∏è‚É£ Ver √°reas de plantio cadastradas")
            print("8Ô∏è‚É£ Calcular insumo")
            print("9Ô∏è‚É£ Estatistica")
            print("üîü Informa√ß√µes meteriologicas")
            print("0Ô∏è‚É£ Sair")

            opcao = input("Escolha uma op√ß√£o: ").strip()

            if opcao == "1":
                self.culture_manager.select_culture()
            elif opcao == "2":
                self.culture_manager.register_culture()
            elif opcao == "3":
                self.culture_manager.registered_cultures()
            elif opcao == "4":
                self.display_area_calculador.calculate_area()
            elif opcao == "5":
                self.register_inputs()
            elif opcao == "6":
                self.show_inputs()
            elif opcao == "7":
                self.display_area_calculador.show_areas()
            elif opcao == "8":
                self.calcular_insumo()
            elif opcao == "9":
                self.estatistica = RScriptLoader.chamar_estatistica()
            elif opcao == "10":
                pass
            elif opcao == "0":
                print("üëã Saindo do programa. At√© mais!")
                break
            else:
                print("‚ùå Op√ß√£o inv√°lida. Tente novamente.")
              
    def register_inputs(self):
        """Cadastra insumos para as culturas escolhidas."""
        if not self.culture_manager.cultura_escolhida:
            print("‚ö†Ô∏è Voc√™ precisa escolher as culturas primeiro.")
            return

        for cultura in self.culture_manager.cultura_escolhida:
            print(f"\nCadastrando insumos para a cultura: {cultura.capitalize()}")
            self.insumo.cadastrar_insumos()
            self.insumos[cultura] = self.insumo  # Armazena o objeto Insumo por cultura

    def show_inputs(self):
        """Exibe os insumos cadastrados para cada cultura."""
        if not self.insumos:
            print("‚ö†Ô∏è Nenhum insumo foi cadastrado ainda.")
            return

        for cultura, insumo in self.insumos.items():
            print(f"\nüìã Insumos cadastrados para a cultura {cultura.capitalize()}:")
            print(self.insumo.exibir_insumos())
    
    
    def calcular_insumo(self):
        """Calcula a quantidade necess√°ria de insumos para cada cultura cadastrada."""
        if not self.area_plantio:
            print("‚ö†Ô∏è Nenhuma √°rea de plantio foi cadastrada ainda.")
            return

        if not self.insumos:
            print("‚ö†Ô∏è Nenhum insumo foi cadastrado ainda.")
            return

        for cultura in self.culture_manager.cultura_escolhida:
            area = self.area_plantio.area
            if cultura not in self.insumos:
                print(f"‚ö†Ô∏è Nenhum insumo cadastrado para a cultura {cultura.capitalize()}.")
                continue
            
            print(f"\nüìä Calculando insumos para a cultura {cultura.capitalize()}...")
            _quantidade = len(self.insumo.exibir_insumos())

            for i in range(_quantidade):
                print(i)
                area_plantada = self.area_plantio.area
                print(area_plantada[0])
                area = area_plantada[i]
                quantidade_insumo = self.insumo.quantidade_insumo()
                print(quantidade_insumo, area)
                quantidade_total = InsumoCalculator(area, quantidade_insumo)

                print(f"üîπ {self.insumo.exibir_insumos()}: {quantidade_total.calcular_insumo():.2f} unidades necess√°rias para {area:.2f} hectares.")

            
