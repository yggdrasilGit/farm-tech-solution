from calculation.area_calculator import AreaCalculator

class DisplayAreaCalculator():
    """
    Classe respons√°vel mandar as informacoes para o menu principal.
    """
    def __init__(self, cultura):
       self.culture_manager = cultura
       self.areas_plantio = {}  # Dicion√°rio para armazenar √°reas por cultura
       self.area = []

    
    def calculate_area(self):
        """Calcula a √°rea de plantio em hectares para cada cultura escolhida."""
        if not self.culture_manager:
            print(self.culture_manager)
            print("‚ö†Ô∏è Voc√™ precisa escolher as culturas primeiro.")
            return

        for cultura in self.culture_manager:
            print(f"\nCalculando √°rea para a cultura: {cultura.capitalize()}")

            print("Escolha a forma da √°rea de plantio:")
            print("1Ô∏è‚É£ Quadrado")
            print("2Ô∏è‚É£ Ret√¢ngulo")
            print("3Ô∏è‚É£ C√≠rculo")
            print("4Ô∏è‚É£ Tri√¢ngulo")
            print("5Ô∏è‚É£ Pol√≠gono Regular")
            print("6Ô∏è‚É£ Trap√©zio")

            opcao = input("Digite o n√∫mero da op√ß√£o: ").strip()

            area = 0
            if opcao == "1":
                lado = float(input("Digite o lado do quadrado (km): "))
                area = AreaCalculator.calcular_quadrado(lado)
            elif opcao == "2":
                base = float(input("Digite a base do ret√¢ngulo (km): "))
                altura = float(input("Digite a altura do ret√¢ngulo (km): "))
                area = AreaCalculator.calcular_retangulo(base, altura)
            elif opcao == "3":
                raio = float(input("Digite o raio do c√≠rculo (km): "))
                area = AreaCalculator.calcular_circulo(raio)
            elif opcao == "4":
                base = float(input("Digite a base do tri√¢ngulo (km): "))
                altura = float(input("Digite a altura do tri√¢ngulo (km): "))
                area = AreaCalculator.calcular_triangulo(base, altura)
            elif opcao == "5":
                n_lados = int(input("Digite o n√∫mero de lados do pol√≠gono regular: "))
                comprimento_lado = float(input("Digite o comprimento de cada lado (km): "))
                area = AreaCalculator.calcular_poligono_regular(n_lados, comprimento_lado)
            elif opcao == "6":
                base1 = float(input("Digite a base maior do trap√©zio (km): "))
                base2 = float(input("Digite a base menor do trap√©zio (km): "))
                altura = float(input("Digite a altura do trap√©zio (km): "))
                area = AreaCalculator.calcular_trapezio(base1, base2, altura)
            else:
                print("‚ùå Op√ß√£o inv√°lida. Tente novamente.")
                continue  # Volta para o in√≠cio do loop

            # Salvando a √°rea calculada no dicion√°rio
            self.areas_plantio[cultura] = area
            print(f"üå± A √°rea de plantio para {cultura.capitalize()} √© de {area:.2f} hectares.")

    def show_areas(self):
        """Exibe as √°reas de plantio calculadas para cada cultura."""
        if not self.areas_plantio:
            print("‚ö†Ô∏è Nenhuma √°rea de plantio foi cadastrada ainda.")
            return

        print("\nüìè √Åreas de plantio cadastradas:")
        for cultura, area in self.areas_plantio.items():
            print(area)
            self.area.append(area)
            print(self.area)
            print(f"üå± Cultura: {cultura.capitalize()} - √Årea: {area:.2f} hectares")